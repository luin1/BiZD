/* Zapytanie 1 */
SELECT CONCAT(LAST_NAME, CONCAT(' - ', SALARY)) AS wynagrodzenie
FROM EMPLOYEES
WHERE (DEPARTMENT_ID = 20 OR DEPARTMENT_ID = 50) AND SALARY BETWEEN 2000 AND 7000
ORDER BY LAST_NAME;
/* Zapytanie 2 */
SELECT e1.HIRE_DATE, e1.LAST_NAME, e1.SALARY
FROM EMPLOYEES e1
JOIN EMPLOYEES e2 ON e1.MANAGER_ID = e2.EMPLOYEE_ID
WHERE e1.MANAGER_ID IS NOT NULL
AND TO_CHAR(e2.HIRE_DATE, 'YYYY') = '2005'
ORDER BY e1.SALARY;
/* Zapytanie 3 */
SELECT CONCAT(FIRST_NAME, CONCAT(' ',LAST_NAME)) AS NAME, SALARY, PHONE_NUMBER
FROM EMPLOYEES
WHERE SUBSTR(LAST_NAME, 3, 1) = 'e'
AND SUBSTR(FIRST_NAME, 1, 2) = 'Jo'
ORDER BY NAME DESC, SALARY ASC;
/* Zapytanie 4 */
SELECT FIRST_NAME, LAST_NAME, round(months_between(CURRENT_DATE, HIRE_DATE)) AS liczba_miesiecy_przepracowanych,
CASE
WHEN round(months_between(CURRENT_DATE, HIRE_DATE))<150 THEN 0.1*SALARY
WHEN round(months_between(CURRENT_DATE, HIRE_DATE))<200 THEN 0.2*SALARY
ELSE 0.3*SALARY END
AS wysokosc_dodatku
FROM EMPLOYEES
ORDER BY liczba_miesiecy_przepracowanych;
/* Zapytanie 5 */
SELECT d1.DEPARTMENT_NAME, SUM(j1.min_salary) AS suma_minimalnej, SUM(j1.max_salary) AS suma_maksymalnej, AVG(j1.min_salary) AS srednia_minimalnej, AVG(j1.max_salary) AS srednia_maksymalnej
FROM DEPARTMENTS d1
JOIN JOB_HISTORY jh1
ON jh1.DEPARTMENT_ID = d1.DEPARTMENT_ID
JOIN JOBS j1
ON jh1.JOB_ID = j1.JOB_ID
WHERE j1.MIN_SALARY > 5000
GROUP BY d1.DEPARTMENT_NAME;
/* Zapytanie 6 */
SELECT e1.LAST_NAME, e1.DEPARTMENT_ID, d1.DEPARTMENT_NAME, e1.JOB_ID 
FROM EMPLOYEES e1
JOIN DEPARTMENTS d1
ON e1.DEPARTMENT_ID = d1.DEPARTMENT_ID
JOIN LOCATIONS l1
ON d1.location_id = l1.location_id
WHERE l1.city = 'Toronto';
/* Zapytanie 7 */
SELECT e1.FIRST_NAME, e1.LAST_NAME
FROM EMPLOYEES e1
WHERE e1.DEPARTMENT_ID IN (SELECT d1.DEPARTMENT_ID FROM DEPARTMENTS d1 JOIN EMPLOYEES e1 ON e1.DEPARTMENT_ID = d1.DEPARTMENT_ID
WHERE e1.EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Jennifer'));
/* Zapytanie 8 */
SELECT DEPARTMENT_ID,DEPARTMENT_NAME FROM DEPARTMENTS
WHERE DEPARTMENT_ID NOT IN (SELECT UNIQUE d1.DEPARTMENT_ID
FROM DEPARTMENTS d1
JOIN EMPLOYEES e1
ON e1.DEPARTMENT_ID = d1.DEPARTMENT_ID)
/* Zapytanie 9 */
CREATE TABLE JOB_GRADES AS (SELECT * FROM "HR"."JOB_GRADES");
ALTER TABLE JOB_GRADES ADD PRIMARY KEY (GRADE);
/* Zapytanie 10 */
SELECT e1.FIRST_NAME, e1.LAST_NAME, d1.DEPARTMENT_NAME, e1.SALARY, (SELECT jg1.GRADE from JOB_GRADES jg1 WHERE e1.SALARY between jg1.MIN_SALARY AND jg1.MAX_SALARY) AS GRADE
FROM EMPLOYEES e1
JOIN DEPARTMENTS d1
ON e1.DEPARTMENT_ID = d1.DEPARTMENT_ID;
/* Zapytanie 11 */
SELECT e1.FIRST_NAME, e1.LAST_NAME, e1.SALARY
FROM EMPLOYEES e1
WHERE e1.SALARY > (SELECT AVG(e2.SALARY) FROM EMPLOYEES e2)
ORDER BY e1.SALARY DESC;
/* Zapytanie 12 */
SELECT e1.EMPLOYEE_ID ,e1.FIRST_NAME, e1.LAST_NAME
FROM EMPLOYEES e1
WHERE e1.DEPARTMENT_ID IN (SELECT UNIQUE d1.DEPARTMENT_ID 
FROM DEPARTMENTS d1
JOIN EMPLOYEES e2
ON e2.DEPARTMENT_ID = d1.DEPARTMENT_ID
WHERE e2.EMPLOYEE_ID IN (SELECT employee_id FROM EMPLOYEES WHERE LAST_NAME LIKE '%u%'));